<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="18" hostname="DESKTOP-GPKURBV" failures="1" tests="6" name="Test_MyStore" time="6.107" errors="0" timestamp="2022-07-12T13:58:41 CDT">
  <testcase classname="com.myStore.TestCases.IndexTestPage" name="@BeforeMethod setup" time="2.882">
    <failure type="java.lang.NumberFormatException" message="Cannot parse null string">
      <![CDATA[java.lang.NumberFormatException: Cannot parse null string
at java.base/java.lang.Integer.parseInt(Integer.java:630)
at java.base/java.lang.Integer.parseInt(Integer.java:786)
at com.myStore.BaseClass.BaseClass.launchApp(BaseClass.java:80)
at com.myStore.TestCases.IndexTestPage.setup(IndexTestPage.java:27)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.myStore.TestCases.IndexTestPage" name="@AfterMethod tearDown" time="-1.657652318399E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.myStore.TestCases.IndexTestPage" name="@BeforeMethod setup" time="-1.657652318401E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.myStore.TestCases.IndexTestPage" name="@AfterMethod tearDown" time="-1.657652318404E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.myStore.TestCases.LoginPageTest" name="@BeforeMethod setup" time="0.867">
    <failure type="java.lang.NumberFormatException" message="Cannot parse null string">
      <![CDATA[java.lang.NumberFormatException: Cannot parse null string
at java.base/java.lang.Integer.parseInt(Integer.java:630)
at java.base/java.lang.Integer.parseInt(Integer.java:786)
at com.myStore.BaseClass.BaseClass.launchApp(BaseClass.java:80)
at com.myStore.TestCases.LoginPageTest.setup(LoginPageTest.java:24)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.myStore.TestCases.LoginPageTest" name="@AfterMethod tearDown" time="-1.657652319757E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.myStore.TestCases.SearchResultPageTest" name="@BeforeMethod setup" time="0.867">
    <failure type="java.lang.NumberFormatException" message="Cannot parse null string">
      <![CDATA[java.lang.NumberFormatException: Cannot parse null string
at java.base/java.lang.Integer.parseInt(Integer.java:630)
at java.base/java.lang.Integer.parseInt(Integer.java:786)
at com.myStore.BaseClass.BaseClass.launchApp(BaseClass.java:80)
at com.myStore.TestCases.SearchResultPageTest.setup(SearchResultPageTest.java:34)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.myStore.TestCases.SearchResultPageTest" name="@AfterMethod tearDown" time="-1.65765232063E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.myStore.TestCases.HomePageTest" name="@BeforeMethod setup" time="0.839">
    <failure type="java.lang.NumberFormatException" message="Cannot parse null string">
      <![CDATA[java.lang.NumberFormatException: Cannot parse null string
at java.base/java.lang.Integer.parseInt(Integer.java:630)
at java.base/java.lang.Integer.parseInt(Integer.java:786)
at com.myStore.BaseClass.BaseClass.launchApp(BaseClass.java:80)
at com.myStore.TestCases.HomePageTest.setup(HomePageTest.java:30)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.myStore.TestCases.HomePageTest" name="@AfterMethod tearDown" time="-1.65765232154E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.myStore.TestCases.IndexTestPage" name="verifyLogo" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogo -->
  <testcase classname="com.myStore.TestCases.IndexTestPage" name="verifyTitle" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTitle -->
  <testcase classname="com.myStore.TestCases.LoginPageTest" name="loginTest" time="0.0">
    <skipped/>
  </testcase> <!-- loginTest -->
  <testcase classname="com.myStore.TestCases.SearchResultPageTest" name="ProductAvailability" time="0.0">
    <skipped/>
  </testcase> <!-- ProductAvailability -->
  <testcase classname="com.myStore.TestCases.HomePageTest" name="orderHistoryandDetailsTest" time="0.0">
    <skipped/>
  </testcase> <!-- orderHistoryandDetailsTest -->
  <testcase classname="com.myStore.TestCases.HomePageTest" name="wishListTest" time="0.052">
    <failure type="org.testng.internal.reflect.MethodMatcherException" message="
[public void com.myStore.TestCases.HomePageTest.wishListTest() throws java.lang.Throwable] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: wishListTest([])
Arguments: [(java.lang.String) admin@xyz.com,(java.lang.String) admin@123]">
      <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void com.myStore.TestCases.HomePageTest.wishListTest() throws java.lang.Throwable] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: wishListTest([])
Arguments: [(java.lang.String) admin@xyz.com,(java.lang.String) admin@123]
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- wishListTest -->
  <testcase classname="com.myStore.TestCases.AddToCartPageTest" name="AddToCartTest" time="0.0">
    <ignored/>
  </testcase> <!-- AddToCartTest -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myStore.TestCases.AccountCreationPageTest" name="verifyCreateAccountPageTest" time="0.0">
    <ignored/>
  </testcase> <!-- verifyCreateAccountPageTest -->
  <testcase classname="com.myStore.TestCases.OrderPageTest" name="VerifyTotalPrice" time="0.0">
    <ignored/>
  </testcase> <!-- VerifyTotalPrice -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myStore.BaseClass.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myStore.TestCases.EndtoEnd" name="endToendTest" time="0.0">
    <ignored/>
  </testcase> <!-- endToendTest -->
</testsuite> <!-- Test_MyStore -->
